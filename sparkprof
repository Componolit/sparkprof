#!/usr/bin/env python3

import re
import sys
import subprocess

args = [a for a in sys.argv[1:] if not a.startswith('--steps-warn=') and not a.startswith('--steps-error=')] + ['--report=statistics']

steps_warn  = next((int(x[13:]) for x in sys.argv[1:] if x.startswith('--steps-warn=')), None)
steps_error = next((int(x[14:]) for x in sys.argv[1:] if x.startswith('--steps-error=')), None)

gp = subprocess.Popen (['gnatprove'] + args, stdout = subprocess.PIPE, universal_newlines = True)
for line in gp.stdout:
    m = re.match('^(.*) info: (.*)$', line);
    if m:
        n = re.match('^(.*) proved \((.*): (.*) VC in max (\d.\d) seconds and (\d+) steps?\)(.*)$', m.group(2));
        if n:
            vcs = int(n.group(3))
            steps = int(n.group(5))
            emit = None
            if steps_error and steps >= steps_error:
                emit = "error"
            elif steps_warn and steps >= steps_warn:
                emit = "warning"

            if emit:
                template = "{intro} {level}: too many steps: {type} proved ({prover}: {vcs} VC in " \
                           + "max ({time}) seconds and {steps} steps){rest}"
                print(template.format(
                    intro  = m.group(1),
                    level  = emit,
                    type   = n.group(1),
                    prover = n.group(2),
                    vcs    = vcs,
                    time   = n.group(4),
                    steps  = steps,
                    rest   = n.group(6)))
    else:
        sys.stdout.write(line)
